<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
">
    
    <!-- Using an embedded solr server -->
    <bean id="solrServer" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer"> 
        <constructor-arg index="0" ref="coreContainer"/>
        <constructor-arg index="1" value="phenodigm"/>
    </bean>
    <!-- For the CoreContainer we're using a solr core pre-built from the H2 database using the phenodigm2-solr project.
        This isn't ideal as there is a bit of a chicken-and-egg problem with integration testing the solr DAO
    -->
    <bean id="coreContainer" class="org.apache.solr.core.CoreContainer" init-method="load"> 
        <constructor-arg index="0" value="../target/solr/"/>
    </bean>
    
    <!-- Using an external solr server via HTTP -->    
    <!--    <bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer"> 
        <constructor-arg index="0" value="http://localhost:8084/phenodigm2/solr/phenodigm"/>
    </bean>-->
   
    <bean id="phenoDigmWebDaoSolrImpl" class="uk.ac.sanger.phenodigm2.dao.PhenoDigmWebDaoSolrImpl"/>

</beans>
