<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
">
   
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="phenodigmJdbcDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${pheno.driverClassName}" />
        <!-- For Flyway there are idiosyncracies when using H2 in Spring mode so the DB needs some custom settings-->
        <property name="url" value="${pheno.url}${flyway.h2.args}" />
        <property name="username" value="${pheno.username}" />
        <property name="password" value="${pheno.password}" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="phenodigmJdbcDataSource" />
    </bean>
    
    <bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate">
        <property name="dataSource" ref="phenodigmJdbcDataSource"/>
        <property name="schemas" value="PHENODIGM2"/>
    </bean>
    <!--setting lazy-init to true means the class will only be set-up when needed. This is nice when testing PhenoDigmWebDaoJdbcImpl which doesn't use the cache. -->  
    <bean id="phenoDigmDaoJdbcImpl" class="uk.ac.sanger.phenodigm2.dao.PhenoDigmDaoJdbcImpl" init-method="setUpCaches" depends-on="flyway" lazy-init="true"/>
    <bean id="phenoDigmWebDaoJdbcImpl" class="uk.ac.sanger.phenodigm2.dao.PhenoDigmWebDaoJdbcImpl" depends-on="flyway"/>

</beans>
