<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
            http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
">
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="uk.ac.sanger.phenodigm2" />
    
    <!--  Get the datasources from the JNDI container -->
    <jee:jndi-lookup id="phenodigmDataSource" jndi-name="jdbc/phenodigmDataSource" expected-type="javax.sql.DataSource" />

    <!-- Provide the jdbcTemplate the phenodigmDataSource--> 
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="phenodigmDataSource" />
    </bean>
    
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
        
    <!-- Handles HTTP GET requests for /js/** by efficiently serving up static resources in the ${webappRoot}/resources/js directory -->
    <!--<mvc:resources mapping="/js/**" location="/resources/js/" />-->
    
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    
<!--    <mvc:interceptors>
        <mvc:interceptor>
            <bean>
        </mvc:interceptor>
    </mvc:interceptors>-->
    
    <bean id="globalConfiguration" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.HashMap</value>
		</property>
		<property name="sourceMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="baseUrl" value="/PhenoDigm2" />
			</map>
		</property>
	</bean>
        
</beans>
